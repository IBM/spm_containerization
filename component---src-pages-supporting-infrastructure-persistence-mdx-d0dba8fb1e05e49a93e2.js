"use strict";(self.webpackChunkspm_kubernetes=self.webpackChunkspm_kubernetes||[]).push([[566],{1539:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return i},default:function(){return y}});var n=a(45),o=(a(6540),a(5680)),r=a(4330);const s=["components"],i={},l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",t)},c=l("Tabs"),u=l("Tab"),p=l("Row"),m=l("Column"),d=l("InlineNotification"),g={_frontmatter:i},h=r.A;function y(e){let{components:t}=e,a=(0,n.A)(e,s);return(0,o.yg)(h,Object.assign({},g,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h3",null,"What is Persistence Storage?"),(0,o.yg)("p",null,"In Kubernetes, any data stored within the application pods is typically lost when the container terminates."),(0,o.yg)("p",null,"Persistent storage addresses this challenge by providing the ability to store and access data in a durable and consistent manner across container deployments, even when the containers are rescheduled, restarted, or replaced."),(0,o.yg)("p",null,"Using persistent storage, the applications running in Kubernetes clusters can retain data beyond the lifespan of individual containers.\nThis ensures that information such as files, logs, and generated content, remains intact and accessible even if containers are destroyed or recreated."),(0,o.yg)("p",null,"For more information about persistent storage, see ",(0,o.yg)("a",{parentName:"p",href:"https://aws.amazon.com/blogs/storage/persistent-storage-for-kubernetes/"},"Persistent storage for Kubernetes"),"."),(0,o.yg)("h3",null,"Using Persistent Storage in SPM"),(0,o.yg)("p",null,"There is a wide range of choices provided by various Cloud providers for utilising persistent storage in order to store and access information using Merative SPM on Kubernetes."),(0,o.yg)("p",null,"The common types of storage are Block Storage which controls data on devices, ",(0,o.yg)("a",{parentName:"p",href:"https://docs.oracle.com/en-us/iaas/Content/File/Concepts/filestorageoverview.htm"},"File Storage")," which is using the NFS and SMB protocols, or ",(0,o.yg)("a",{parentName:"p",href:"https://docs.oracle.com/en-us/iaas/Content/Object/Concepts/objectstorageoverview.htm"},"Object Storage")," for unstructured data such as COS, AWS S3, and Azure Blob."),(0,o.yg)("p",null,"Choosing the appropriate method for enabling persistent storage in the SPM application on Kubernetes depends on number of factors:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"the availability of services offered by the Cloud provider"),(0,o.yg)("li",{parentName:"ul"},"the version of the Kubernetes or OpenShift cluster"),(0,o.yg)("li",{parentName:"ul"},"the compatibility and support provided by the selected platform.")),(0,o.yg)("p",null,"Typically, the primary options for achieving persistence are File Storage and Object Storage."),(0,o.yg)("h4",null,"File Storage"),(0,o.yg)("p",null,"File Storage is a storage method that stores data in a hierarchical structure, within folders as a single unit of information.\nIt is widely accessible and offers relatively fast performance. File storage is typically leveraging protocols such as Network File System (NFS) and Server Message Block (SMB).\nSome notable implementations of File Storage include IBM Cloud File Storage (CFS), Amazon Elastic File System (EFS), and Azure File Service (AFS)."),(0,o.yg)("h4",null,"Object Storage"),(0,o.yg)("p",null,"Object Storage enables the storage of vast amounts of data in a straightforward and cost-effective manner.\nIn Azure, you can utilize Azure Blob Storage to access object storage, which is configured within a Premium Storage Account.\nWhile Azure Blob Storage shares similarities with IBM Cloud Object Storage (COS) and Amazon S3 (S3), it does not offer support for the S3FS protocol interface."),(0,o.yg)("h3",null,"Usage"),(0,o.yg)("p",null,"The following sample configurations are examples showing how to create Persistence Volume dynamically during the deployment of SPM on Kubernetes."),(0,o.yg)(c,{mdxType:"Tabs"},(0,o.yg)(u,{label:"Azure File Service",mdxType:"Tab"},(0,o.yg)(p,{mdxType:"Row"},(0,o.yg)(m,{mdxType:"Column"},(0,o.yg)("p",null,"To archive data persistently through ",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/aks/azure-files-csi"},"Azure File Service Storage"),", prepare the following prerequisites in the Kubernetes cluster and in your Azure subscription:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"On Azure, create a storage account of type Premium"),(0,o.yg)("li",{parentName:"ul"},"Within the storage account, create a Azure File Service instance, and take note of the name as “AccountName”"),(0,o.yg)("li",{parentName:"ul"},"In the Azure File Service instance, in the Access Keys section, create a new key, and take note of the name as “AccountKey” (alternatively create a SAS token)"),(0,o.yg)("li",{parentName:"ul"},"Navigate to the Azure File Service instance, create a File Share, select the protocol as ‘SMB’, and take note of the name as “file-share-smb”"),(0,o.yg)("li",{parentName:"ul"},"Encode the values of “AccountName” and “AccountKey” (or SAS token) in Base64 and add the following section to your override-values.yaml file with the correct values inputted"),(0,o.yg)("li",{parentName:"ul"},"Enter the properties as illustrated in the example below")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml",metastring:"path=override-values.yaml",path:"override-values.yaml"},'---\nglobal:\n  apps:\n    common:\n      persistence:\n        ## Persistence volume to store data (such as non-log files)\n        enabled: false\n        ## If enabled, connects to a persistence storage service\n        credentials:\n          azurestorageaccountname: "AccountName (encoded in Base64)"\n          azurestorageaccountkey: "AccountKey (encoded in Base64)"\n        storageClassName: "azureblob-fuse-premium"\n        storageCapacity: "10Gi"\n        properties:\n          azureFile:\n            secretName: "spm-persistence-secret"\n            shareName: "file-share-smb"\n            readOnly: false\n        mountPoint: \'/tmp/persistence\'\n        jmxstats:\n          ## Parameters of the JMX Stats to be persisted on the PVC\n          # The property timerPeriod sets the value curam.jmx.output_statistics_timer_period in milliseconds\n          enabled: false\n          timerPeriod: 60000\n'))))),(0,o.yg)(u,{label:"Azure Blob Storage",mdxType:"Tab"},(0,o.yg)(p,{mdxType:"Row"},(0,o.yg)(m,{mdxType:"Column"},(0,o.yg)("p",null,"To archive data persistently through ",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/aks/azure-blob-csi?tabs=Blobfuse"},"Azure Blob Storage"),", prepare the following prerequisites in the Kubernetes cluster and in your Azure subscription:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"On Azure, create a storage account of type Premium"),(0,o.yg)("li",{parentName:"ul"},"Within the storage account, create a Azure Blob Storage instance, and take note of the name as “AccountName”"),(0,o.yg)("li",{parentName:"ul"},"In the Azure Blob Storage instance, in the Access Keys section, create a new key, and take note of the name as “AccountKey” (alternatively create a SAS token)"),(0,o.yg)("li",{parentName:"ul"},"Navigate to the Azure Blob Storage instance, create a container, and take note of the name as “blob-container”"),(0,o.yg)("li",{parentName:"ul"},"Encode the values of “AccountName” and “AccountKey” (or SAS token) in Base64 and add the following section to your override-values.yaml file with the correct values inputted"),(0,o.yg)("li",{parentName:"ul"},"Enter the properties as illustrated in the example below")),(0,o.yg)(d,{kind:"warning",mdxType:"InlineNotification"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"NOTE")," Azure Blob Storage is not supported on the Openshift platform")))),(0,o.yg)(p,{mdxType:"Row"},(0,o.yg)(m,{mdxType:"Column"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml",metastring:"path=override-values.yaml",path:"override-values.yaml"},'---\nglobal:\n  apps:\n    common:\n      persistence:\n        ## Persistence volume to store data (such as non-log files)\n        enabled: false\n        ## If enabled, creates a PV and PVC to connect to Azure Blob Storage container\n        credentials:\n          azurestorageaccountname: "AccountName (encoded in Base64)"\n          azurestorageaccountkey: "AccountKey (encoded in Base64)"\n        storageClassName: "azureblob-fuse-premium"\n        storageCapacity: "10Gi"\n        storageAccessModes: "ReadWriteMany"\n        properties:\n          persistentVolumeReclaimPolicy: \'Delete\'\n          storageClassName: \'azureblob-fuse-premium\'\n          mountOptions:\n            - -o allow_other\n            - --file-cache-timeout-in-seconds=120\n          csi:\n            driver: \'blob.csi.azure.com\'\n            readOnly: false\n            volumeHandle: "pv-handle-unique-id"\n            volumeAttributes:\n              containerName: "blob-container"\n              isHnsEnabled: "true"\n              protocol: fuse2\n            nodeStageSecretRef:\n              name: "spm-persistence-secret"\n              namespace: "my-namespace"\n        jmxstats:\n          ## Parameters of the JMX Stats to be persisted on the PVC\n          # The property timerPeriod sets the value curam.jmx.output_statistics_timer_period in milliseconds\n          enabled: false\n          timerPeriod: 60000\n')))))))}y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-supporting-infrastructure-persistence-mdx-d0dba8fb1e05e49a93e2.js.map