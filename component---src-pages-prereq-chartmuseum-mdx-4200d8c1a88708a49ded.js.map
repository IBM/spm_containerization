{"version":3,"file":"component---src-pages-prereq-chartmuseum-mdx-4200d8c1a88708a49ded.js","mappings":"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","sources":["webpack://spm-kubernetes/./src/pages/prereq/chartmuseum.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/spm-kubernetes/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Helm Charts are stored in a repository. For development purposes, you can use a local repository to use Helm along with Minikube. This runbook uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/helm/chartmuseum/\"\n      }}>{`ChartMuseum`}</a>{` as the local repository.`}</p>\n    <p>{`A Helm Chart is a collection of files that describe a related set of Kubernetes resources. Helm Charts are the recommended way to distribute deployments on Kubernetes clusters.`}</p>\n    <p>{`Use ChartMuseum to develop, test, and deploy locally before you distribute the charts. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://helm.sh/docs/intro/\"\n      }}>{`Introduction to Helm`}</a>{`.`}</p>\n    <h2>{`Installing ChartMuseum in a DockerÂ® container`}</h2>\n    <p>{`ChartMuseum can run in a Docker container by using the `}<inlineCode parentName=\"p\">{`docker run`}</inlineCode>{` command when the docker container is created.`}</p>\n    <p>{`Take the following steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Start a Docker container that is accessible locally on port 8080:`}</li>\n    </ul>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Mac/Linux\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`docker run --rm -d --name chartmuseum \\\\\n  -p 8080:8080 \\\\\n  -e DEBUG=true \\\\\n  -e STORAGE=local \\\\\n  -e STORAGE_LOCAL_ROOTDIR=/tmp/charts \\\\\n  chartmuseum/chartmuseum:v0.12.0\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Windows PS\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-powershell\"\n              }}>{`docker run --rm -d --name chartmuseum \\`\n  -p 8080:8080 \\`\n  -e DEBUG=true \\`\n  -e STORAGE=local \\`\n  -e STORAGE_LOCAL_ROOTDIR=/tmp/charts \\`\n  chartmuseum/chartmuseum:v0.12.0\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <ul>\n      <li parentName=\"ul\">{`Run the `}<inlineCode parentName=\"li\">{`docker logs`}</inlineCode>{` command to view the Chart Museum logs:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`docker logs chartmuseum\n`}</code></pre>\n    <h3>{`Testing ChartMuseum connectivity`}</h3>\n    <p>{`Run the following command to test connectivity. `}<inlineCode parentName=\"p\">{`127.0.0.1`}</inlineCode>{` is the localhost IP address.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` On Windows, the Docker Engine can run in a dedicated docker-machine, or can be reused from the Minikube VM.`}</p>\n    </InlineNotification>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Mac/Linux\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`curl http://127.0.0.1:8080/index.yaml\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Windows PS\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-powershell\"\n              }}>{`# Uncomment the appropriate command:\n\n# Use this command if using Docker locally:\n# Invoke-RestMethod http://127.0.0.1:8080/index.yaml\n\n# Use this command if using the Docker inside Minikube:\n# Invoke-RestMethod http://$(minikube ip):8080/index.yaml\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <p>{`You will see something like the following example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nentries: {}\ngenerated: \"2019-06-17T10:55:37Z\"\nserverInfo: {}\n`}</code></pre>\n    <h2>{`Provisioning charts`}</h2>\n    <p>{`When ChartMuseum is running, you can copy the compressed `}<inlineCode parentName=\"p\">{`tgz`}</inlineCode>{` files that are produced by Helm, or by using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/chartmuseum/helm-push\"\n      }}>{`Helm Push`}</a>{` plugin (recommended approach).`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` On Windows, as per `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/chartmuseum/helm-push/issues/24\"\n        }}>{`this issue`}</a>{`, the Helm Push plugin must be installed from a Bash shell (e.g., Git Bash).`}</p>\n    </InlineNotification>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`helm plugin install https://github.com/chartmuseum/helm-push\n`}</code></pre>\n    <p>{`Creating the chart files is covered later in the runbook when you run the `}<inlineCode parentName=\"p\">{`helm package`}</inlineCode>{` command. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/deployment/hc_preparation\"\n      }}>{`Preparing Helm Charts`}</a>{`.`}</p>\n    <h2>{`Configure Helm to access the local repository`}</h2>\n    <p>{`To use ChartMuseum as a repository, you must configure Helm to point to it. Run the appropriate command:`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Local Docker\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`helm repo add local-development http://127.0.0.1:8080/\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"minikube VM Docker\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`helm repo add local-development http://$(minikube ip):8080/\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <p>{`Verify the list of repositories by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`helm repo list\n`}</code></pre>\n    <p>{`The helm repo list command also returns the `}<inlineCode parentName=\"p\">{`local-development`}</inlineCode>{` repository that you added when you ran the `}<inlineCode parentName=\"p\">{`helm repo add`}</inlineCode>{` command.`}</p>\n    <p>{`When the repository is added, run the following command to refresh the Helm index:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`helm repo update\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","Tabs","Tab","Row","Column","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","label","isMDXComponent"],"sourceRoot":""}