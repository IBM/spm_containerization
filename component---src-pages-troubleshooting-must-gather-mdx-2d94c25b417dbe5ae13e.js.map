{"version":3,"file":"component---src-pages-troubleshooting-must-gather-mdx-2d94c25b417dbe5ae13e.js","mappings":"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","sources":["webpack://spm-kubernetes/./src/pages/troubleshooting/must_gather.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/spm-kubernetes/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Collecting MustGather data for SPM on Kubernetes`}</h2>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Introduction</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Collecting MustGather data guidelines</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">General SPM MustGather</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Runtime systems</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Helm information</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Kubernetes deployment information</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Detailed MustGather for logs and other artifacts</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Introduction`}</h2>\n    <p>{`The information laid out in this section details the information needed when raising a support case. Note that not all information detailed is necessary when\nraising an issue on `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/merative/spm-kubernetes/issues\"\n      }}>{`GitHub`}</a>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`Merative SPM may request the `}<strong parentName=\"p\">{`Helm Charts`}</strong>{` and `}<strong parentName=\"p\">{`Dockerfiles`}</strong>{` developed by the engineering team as part of the support process.`}</p>\n    </InlineNotification>\n    <h3>{`Question`}</h3>\n    <p>{`What information should I collect for issues with Merative Social Program Management (SPM) in a Kubernetes environment to assist Meravite Cúram Support with their investigations?`}</p>\n    <h3>{`Answer`}</h3>\n    <p>{`First, a comprehensive description of the problem along with answers to the following questions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Can you recreate the issue and provide the steps for Merative Support to do same?`}</li>\n      <li parentName=\"ul\">{`What is the impact of the issue; for instance, frequency of occurrence and pervasiveness?`}</li>\n      <li parentName=\"ul\">{`Have you identified any workarounds or mitigations?`}</li>\n      <li parentName=\"ul\">{`What investigation have you already performed?`}</li>\n    </ul>\n    <h2>{`Collecting MustGather data guidelines`}</h2>\n    <p>{`Outlines below are must gather data guidelines that we recommend are followed.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Do not provide any unanonymized data or information.`}</li>\n      <li parentName=\"ul\">{`Save all output to text files or files of appropriate formats. Include the command that created the output file.`}</li>\n      <li parentName=\"ul\">{`Logs and other artifacts can only be obtained from a Kubernetes pod if the pod is running; the two exceptions are:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`stdout is still available via `}<inlineCode parentName=\"li\">{`kubectl logs`}</inlineCode>{` (see `}<a parentName=\"li\" {...{\n              \"href\": \"#stdout-logs-from-pods\"\n            }}>{`stdout logs from pods`}</a>{` for detail) even if the pod is in a non-running state such as completed`}</li>\n          <li parentName=\"ul\">{`logs that are stored persistently are available over the lifetime of that storage medium`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Regarding command examples that follow:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`In commands with variable information, such as namespaces, these are represented in the example commands by angle brackets, which you must replace.`}</li>\n          <li parentName=\"ul\">{`Commands where additional options are possible are indicated by an ellipses: …`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2>{`General SPM MustGather`}</h2>\n    <p>{`Beyond the answers to these questions, you need to collect general third party software information (for example, versions) and more specific diagnostic, log, and other information for the areas where you are seeing the issue.\nThis general information is described in the sections that follow.\nFor issues with the following third party software you should consult their external MustGather links as appropriate:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.merative.com/support/spm/question-answer/collecting-data-for-issues\"\n        }}>{`SPM`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/pages/mustgather-read-first-websphere-application-server\"\n        }}>{`Liberty`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/pages/collecting-data-read-first-db2-linux-unix-and-windows-products\"\n        }}>{`Db2`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/pages/read-first-collect-ibm-mq-mustgather-data-linux-unix-windows-and-ibm-i\"\n        }}>{`MQ`}</a></li>\n    </ul>\n    <p>{`The following sections describe how to gather information specific to SPM running on Kubernetes and provide information relating to where logs and traces reside relating to the MustGather.`}</p>\n    <h3>{`SPM and base third party software versions`}</h3>\n    <p>{`In a SPM environment the Ant `}<inlineCode parentName=\"p\">{`configreport`}</inlineCode>{` target includes the following versions in its generated zip file:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`SPM version -  available in the `}<inlineCode parentName=\"li\">{`Installerlogs/Installhistory.txt`}</inlineCode>{` file within the resulting `}<inlineCode parentName=\"li\">{`$SERVER_DIR/config_report.zip`}</inlineCode>{` file`}</li>\n      <li parentName=\"ul\">{`Inside the ConfigReporter*.log file of the config folder within the resulting `}<inlineCode parentName=\"li\">{`$SERVER_DIR/config_report.zip`}</inlineCode>{` file you will find the:`}</li>\n      <li parentName=\"ul\">{`Java version`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Application server version`}</li>\n          <li parentName=\"ul\">{`Database version`}</li>\n          <li parentName=\"ul\">{`Ant version`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`To generate the `}<inlineCode parentName=\"p\">{`$SERVER_DIR/config_report.zip`}</inlineCode>{` file run the Ant `}<inlineCode parentName=\"p\">{`configreport`}</inlineCode>{` target:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cd $SERVER_DIR\n./build.sh configreport\n`}</code></pre>\n    <p>{`Please provide the `}<inlineCode parentName=\"p\">{`config_report.zip`}</inlineCode>{` file.`}</p>\n    <h2>{`Runtime systems`}</h2>\n    <h3>{`Operating systems and platforms`}</h3>\n    <p>{`Include this information for all relevant platforms used for deployment, where you run the Azure CLI or Minikube.`}</p>\n    <p>{`On most systems the following command provides basic platform and operating system information:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`uname -a\n`}</code></pre>\n    <h3>{`Kubernetes and related software versions`}</h3>\n    <p>{`The following commands display the relevant versions for Docker, Helm and Kubernetes:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`  docker version # Provides version information for the Docker client and server\n  docker info    # Provides general runtime information about Docker\n\n  helm version   # Provides Helm version information\n\n  # Depending on your environment, obtain the appropriate Kubernetes version information:\n  minikube version   # If applicable\n  oc version         # If applicable (OpenShift)\n  kubectl version    # Applies to Minikube, Kubernetes and OpenShift environments\n`}</code></pre>\n    <h2>{`Helm information`}</h2>\n    <p>{`For deployments, gather information relevant or appropriate to your environment and the issue faced.`}</p>\n    <p>{`For Helm use the command appropriate to your Helm version to list the deployments in the environment, which provides the release and chart names needed in later Helm commands:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm list -a --namespace <name_space>\n`}</code></pre>\n    <h3>{`Verify Helm Chart correctness`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`helm lint`}</inlineCode>{` command to verify the correctness of your Helm Charts (prior to installation), for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cd $SPM_HOME/helm-charts/spm\nhelm lint .\n`}</code></pre>\n    <p>{`You should receive successful output from the `}<inlineCode parentName=\"p\">{`helm lint`}</inlineCode>{` command like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`==> Linting .\nLint OK\n\n1 chart(s) linted, no failures\n`}</code></pre>\n    <p>{`If you encounter any errors, correct these, and recreate your issue.`}</p>\n    <h3>{`Helm Chart rendering`}</h3>\n    <p>{`Running the `}<inlineCode parentName=\"p\">{`helm template`}</inlineCode>{` command processes the chart and generates output similar to what would be generated during deployment;\nhowever, the `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command (see the following examples) provides additional information; notably overrides provided via the install.\nSo, where possible, the output from `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` is preferable to that of `}<inlineCode parentName=\"p\">{`helm template`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm template <release_name> <chart_name> ...\n`}</code></pre>\n    <p>{`Check the output to verify that the expected values appear as intended.`}</p>\n    <h3>{`Helm Chart installation`}</h3>\n    <p>{`If you encounter errors when installing Helm Charts use the `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command with the following options to generate additional information`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`--debug`}</inlineCode>{` - checks the generated manifests of a release without installing the chart`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`--dry-run`}</inlineCode>{` - produces output similar to `}<inlineCode parentName=\"li\">{`helm template`}</inlineCode>{` but additionally executes the secrets and verifies the objects`}</li>\n    </ul>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm install <release_name> <chart_name> --debug --dry-run ...\n`}</code></pre>\n    <h3>{`Verify Helm Chart installation`}</h3>\n    <p>{`The following command provides more information about what has been deployed or is running in Kubernetes.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm get all`}</inlineCode>{` command provides information equivalent to `}<inlineCode parentName=\"p\">{`helm install --debug --dry-run`}</inlineCode>{`. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm get all <release-name> ...\n`}</code></pre>\n    <h2>{`Kubernetes deployment information`}</h2>\n    <h3>{`Enquiring a Kubernetes environment`}</h3>\n    <p>{`If running in a Minikube environment use the following command to confirm its status:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`minikube status\n`}</code></pre>\n    <p>{`Use the following commands to get information about the running Kubernetes environment.`}</p>\n    <p>{`Display basic information about the cluster configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl config view --namespace <name_space> ...\n`}</code></pre>\n    <p>{`Display basic information about the nodes and pods in the cluster:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl get nodes -o wide --namespace <name_space> ...\nkubectl get pods -o wide --namespace <name_space> ...\n`}</code></pre>\n    <p>{`For each of the pods displayed by the `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command use the pod name as input to the following command to get more detailed information about that pod, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl describe pod <pod_name> --namespace <name_space> ...\n`}</code></pre>\n    <p>{`A convenient way to run the `}<inlineCode parentName=\"p\">{`kubectl describe pod <pod_name> --namespace <name_space> ...`}</inlineCode>{` command for all the pods in a namespace is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mkdir pod\npods=\\`kubectl get pods -o name --namespace <name_space>\\`\nfor p in $pods ; do kubectl describe $p --namespace <name_space> > $p.txt ; done\n`}</code></pre>\n    <p>{`The results will be in the `}<inlineCode parentName=\"p\">{`pod`}</inlineCode>{` folder created using the `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` command.`}</p>\n    <h2>{`MustGather to collect logs and other artifacts`}</h2>\n    <p>{`The following sections identify how to obtain logs and artifacts for specific areas of Kubernetes.`}</p>\n    <h3>{`Externalizing logs and artifacts inside a Kubernetes pod`}</h3>\n    <p>{`Externalizing logs and artifacts from a Kubernetes pod varies by the type of pod.\nThe sections that follow identify locations for this information.\nThe `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#cp\"\n      }}>{`kubectl command reference`}</a>{` gives several examples of how to externalize files from within a pod, such as:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl cp <name_space>/<pod_name>:/logs /tmp/logs\nkubectl exec -n <name_space> <pod_name> -- tar cf - /logs | tar xf - -C /tmp\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Both of the above `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` command formats produce the following spurious, benign error which you can ignore:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`tar: Removing leading \\`/' from member names\n`}</code></pre>\n    <h3>{`Minikube logs`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`minikube logs`}</inlineCode>{` command to obtain logs for the Minikube environment.`}</p>\n    <p>{`You can set the logging level when starting Minikube via the `}<inlineCode parentName=\"p\">{`--v`}</inlineCode>{` option of the `}<inlineCode parentName=\"p\">{`minikube start`}</inlineCode>{` command.\nFor instance, and to conveniently save the output at the same time:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`minikube start --alsologtostderr --v=3 2>&1 | tee /tmp/minikube-start.log\n`}</code></pre>\n    <p>{`Noting that the log output at startup differs from the output from the runtime log content via `}<inlineCode parentName=\"p\">{`minikube logs`}</inlineCode>{`.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://minikube.sigs.k8s.io/docs/\"\n      }}>{`Minikube documentation`}</a>{` for more information.`}</p>\n    <h3>{`stdout logs from pods`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`kubectl logs`}</inlineCode>{` provides the stdout logs for a specified Kubernetes pod; so the log data provided is specific to the type of pod or software running within it.\nFor instance, if a pod is running WebSphere Liberty this command provides the equivalent of the contents of the WebSphere Liberty `}<inlineCode parentName=\"p\">{`console.log`}</inlineCode>{` file\nand for other pods will provide stdout log output specific to that pod’s context; for instance MQ, Cúram XML Server, or Cúram batch.`}</p>\n    <p>{`The command has various options, such as `}<inlineCode parentName=\"p\">{`--follow`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--tail`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`--since`}</inlineCode>{` to control and display the log output.\nSee the `}<inlineCode parentName=\"p\">{`kubectl help logs`}</inlineCode>{` command for option details.`}</p>\n    <h3>{`Third party software logs and artifacts`}</h3>\n    <p>{`Beyond basic stdout logging from a pod there may be additional logging or artifacts needed for investigating an issue.\nThese logs and artifacts will be available within the pod’s file system or, in the case of object storage, in the persistent storage location specified\n`}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/supporting-infrastructure/COS\"\n      }}>{`Cloud Object Storage`}</a>{`.`}</p>\n    <p>{`Further, the specific logs, artifacts, and their locations vary depending on the software running within the pod.`}</p>\n    <p>{`The following sections identify these various locations.`}</p>\n    <h4>{`WebSphere Liberty stdout logs`}</h4>\n    <p>{`WebSphere Liberty pods are identified by the pod naming pattern beginning with: `}<inlineCode parentName=\"p\">{`<helm_release_name>-apps-`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<helm_release_name>-uawebapp-`}</inlineCode>{`.`}</p>\n    <p>{`Thus, if your Helm release was named “purpleclown” you would find pod names like these from a `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-apps-curam-consumer-7c578b9b59-t487n`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-apps-curam-producer-6794fc9b94-4srxr`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-apps-rest-producer-6858d55bd-x6z6s`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-apps-rest-consumer-5567ddc4cd-qpwp7`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-uawebapp-54b56d5866-2mnk5`}</inlineCode></li>\n    </ul>\n    <p>{`where the number of pods may vary depending on the applications deployed and the number of replicas specified.`}</p>\n    <p>{`The default log location for WebSphere Liberty is the `}<inlineCode parentName=\"p\">{`/logs`}</inlineCode>{` folder of the pod’s file system and, for example, can be accessed with the following command`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl exec --namespace <name_space> -it <pod_name> -- ls -l /logs\n`}</code></pre>\n    <p>{`which would produce output like:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`-rw-r----- 1 default root 62334 Apr 14 06:01 messages.log\n-rw-r--r-- 1 default root  2134 Mar 19 06:44 messages_20.04.14_06.00.47.0.log\n-rw-r----- 1 default root   973 Apr 14 06:00 trace.log\n`}</code></pre>\n    <p>{`When using object storage the WebSphere Liberty logs, JVM dumps and garbage collection logs, and Cúram JMX statistics are symbolically linked to the pod’s file system in `}<inlineCode parentName=\"p\">{`/tmp/logs`}</inlineCode>{` and available in your COS bucket.`}</p>\n    <h4>{`WebSphere Liberty configuration information`}</h4>\n    <p>{`WebSphere Liberty configuration information can be found in the pod’s file system in `}<inlineCode parentName=\"p\">{`/liberty/wlp/usr/servers/defaultServer`}</inlineCode>{`, which contains:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`server.xml\njvm.options\nserver.env\nbootstrap.properties\nadc_conf/\n`}</code></pre>\n    <p>{`The WebSphere Liberty `}<inlineCode parentName=\"p\">{`server package`}</inlineCode>{` command can be used to zip up the server; but, the logs folder, being stored separately, must be handled directly from the `}<inlineCode parentName=\"p\">{`/logs`}</inlineCode>{` folder.`}</p>\n    <h4>{`MQ logs and artifacts`}</h4>\n    <p>{`MQ pods are identified by the pod naming pattern beginning with: `}<inlineCode parentName=\"p\">{`<helm_release_name>-mqserverapps-`}</inlineCode>{`.`}</p>\n    <p>{`So, if your Helm release was named “purpleclown” you would find pod names like the following from a `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-mqserver-curam-557d64c76-7sm8r`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-mqserver-rest-dbb994dc8-4p5cv`}</inlineCode></li>\n    </ul>\n    <p>{`where the number of pods may vary depending on the SPM applications deployed.`}</p>\n    <p>{`The location of MQ logs is inside the MQ pods is as documented in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/ibm-mq/9.1?topic=windows-error-log-directories-unix-linux\"\n      }}>{`MQ IBM Documentation`}</a>{`.\nYou can interrogate the various log, error, and trace locations identified in the MQ IBM Documentation (and its MustGather) by accessing the MQ pod’s shell; for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl exec --namespace <name_space> -it <mq_pod_name> -- /bin/bash\n`}</code></pre>\n    <h4>{`Cúram XML Server logs and artifacts`}</h4>\n    <p>{`Cúram XML Server pods are identified by the pod naming pattern beginning with: `}<inlineCode parentName=\"p\">{`<helm_release_name>-xmlserver-`}</inlineCode>{`.`}</p>\n    <p>{`So, if your Helm release was named “purpleclown” you would find pods named like the following from a `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-xmlserver-86b588c784-z76mz`}</inlineCode></li>\n    </ul>\n    <p>{`where the number of pods may vary depending on the number of replicas specified.`}</p>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`kubectl exec`}</inlineCode>{` command as illustrated will place you into the default XML Server directory `}<inlineCode parentName=\"p\">{`/opt/ibm/Curam/xmlserver`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl exec --namespace <name_space> -it <xmlserver_pod_name> -- /bin/bash\n`}</code></pre>\n    <p>{`The log file in `}<inlineCode parentName=\"p\">{`/opt/ibm/Curam/xmlserver/tmp/xmlserver.log`}</inlineCode>{` is the same as the stdout produced by the `}<inlineCode parentName=\"p\">{`kubectl logs`}</inlineCode>{` command.`}</p>\n    <p>{`For more information about XML server tracing and logging, see `}<em parentName=\"p\">{`Configuring the XML server** in the `}</em>{`Social Program Management XML Infrastructure Guide*. Gathering this data is beyond the scope of this document.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`The Social Program Management PDF documentation is available to download from `}<a parentName=\"p\" {...{\n          \"href\": \"https://curam-spm-devops.github.io/wh-support-docs/spm/pdf-documentation/\"\n        }}>{`Merative Support Docs`}</a>{`.`}</p>\n    </InlineNotification>\n    <h4>{`Cúram batch logs and artifacts`}</h4>\n    <p>{`Cúram batch pods are identified by the pod naming pattern beginning with: `}<inlineCode parentName=\"p\">{`<helm_release_name>-batch-`}</inlineCode>{`.`}</p>\n    <p>{`So, if your Helm release was named “purpleclown” you would find pods named like the following from a kubectl get pods command:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-batch-1587036600-9rrnw`}</inlineCode></li>\n    </ul>\n    <p>{`where the number of pods may vary depending on the number of replicas specified.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`kubctl logs`}</inlineCode>{` command to view the batch pod’s stdout.`}</p>\n    <p>{`For these pods the relevant log files can be found within the `}<inlineCode parentName=\"p\">{`/opt/ibm/Curam/release/buildlogs`}</inlineCode>{` folder of the pod’s file system`}</p>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`kubectl exec`}</inlineCode>{` command as illustrated will place you into the pod:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl exec --namespace <name_space> -it <batch_pod_name> -- /bin/bash\n`}</code></pre>\n    <p>{`The log file is in `}<inlineCode parentName=\"p\">{`/opt/ibm/Curam/release/buildlogs/BatchLaucher123456789.log`}</inlineCode>{`.`}</p>\n    <p>{`If the persistence volume is enabled to store data, it will be saved to the Azure blob storage account,`}</p>\n    <p>{`in the “logs” directory within the pod’s directory.`}</p>\n    <p>{`If persistence is not enabled, the logs will be generated in the folder indicated above by default.`}</p>\n    <p>{`Enabling persistence activates the parameter`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`-Ddir.bld.log=$MOUNT_POINT/$HOSTNAME/logs\n`}</code></pre>\n    <p>{`In Batch, the -Ddir.bld.log option is used to specify a system property that defines the path to the directory where`}</p>\n    <p>{`the build logs will be stored. This option is typically used in the context of build commands or automation scripts to`}</p>\n    <p>{`dynamically configure properties without modifying configuration files.`}</p>\n    <p>{`Configuring logs correctly is crucial for debugging and maintaining the build process.`}</p>\n    <p>{`The -Ddir.bld.log option is a flexible and powerful way to dynamically configure the log directory for Batch build processes.`}</p>\n    <p>{`$MOUNT_POINT/$HOSTNAME/logs is a folder created adhoc to store the logs in the Azure blob storage account.`}</p>\n    <h4>{`HTTP Server logs and artifacts`}</h4>\n    <p>{`The Apache HTTP Server is only used for hosting SPM static content this information would only be of interest for issues relating specifically to static content.`}</p>\n    <p>{`HTTP Server pods are identified by the pod naming pattern beginning with: `}<inlineCode parentName=\"p\">{`<helm_release_name>-web-`}</inlineCode>{`.`}</p>\n    <p>{`So, if your Helm release was named “purpleclown” you would find pods named like the following from a `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`purpleclown-web-5c9cf5d868-ncdqk`}</inlineCode></li>\n    </ul>\n    <p>{`where the number of pods may vary depending on the number of replicas specified.`}</p>\n    <p>{`For these pods the relevant log files can be found within the `}<inlineCode parentName=\"p\">{`/var/log/httpd`}</inlineCode>{` folder of the pod’s file system.\nFor instance:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl exec --namespace <name_space> -it <pod_name> -- ls -l /var/log/httpd/error_log /var/log/httpd/access_log\n`}</code></pre>\n    <p>{`would show the relevant logs:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`-rw-r--r-- 1 default root    7826 Jul 28 09:32 /var/log/httpd/access_log\n-rw-r--r-- 1 default root    3297 Jul 28 09:25 /var/log/httpd/error_log\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}