{"version":3,"file":"component---src-pages-troubleshooting-xmlserver-trace-mdx-c5ff83b7fcd360fdc964.js","mappings":"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","sources":["webpack://spm-kubernetes/./src/pages/troubleshooting/xmlserver-trace.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/spm-kubernetes/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Introduction`}</h2>\n    <p>{`This topic describes how to configure XML server tracing when deployed to Kubernetes.`}</p>\n    <p>{`For more information about XML server tracing, see `}<strong parentName=\"p\">{`Debug configuration`}</strong>{` in the `}<em parentName=\"p\">{`Social Program Management XML Infrastructure Guide`}</em>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`The Social Program Management PDF documentation is available to download from `}<a parentName=\"p\" {...{\n          \"href\": \"https://curam-spm-devops.github.io/wh-support-docs/spm/pdf-documentation/\"\n        }}>{`Merative Support Docs`}</a>{`.`}</p>\n    </InlineNotification>\n    <p>{`However, to use it in a Kubernetes environment you will need to perform the steps described in this section.`}</p>\n    <p>{`In summary, you will need to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create a new ConfigMap to override the trace setting in the default `}<inlineCode parentName=\"li\">{`xmlserverconfig.xml.template`}</inlineCode>{` file`}</li>\n      <li parentName=\"ol\">{`Optionally you can (for the `}<inlineCode parentName=\"li\">{`xmlserver`}</inlineCode>{` deployment only) create a ConfigMap to override its default log4j properties file.`}</li>\n    </ol>\n    <p>{`The Kubernetes commands presented in this topic are generic and assume a helm release name of `}<inlineCode parentName=\"p\">{`releasename`}</inlineCode>{`.\nTo enter the commands in this topic as-is you need to enter the following commands first, substituting `}<inlineCode parentName=\"p\">{`<name_space>`}</inlineCode>{` for the OpenShift project name or AKS namespace for your deployment:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For Openshift:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Create an alias for the `}<inlineCode parentName=\"li\">{`oc`}</inlineCode>{` command:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Bash: `}<inlineCode parentName=\"li\">{`alias k='oc'`}</inlineCode></li>\n              <li parentName=\"ul\">{`Windows PowerShell: `}<inlineCode parentName=\"li\">{`Set-Alias -Name k -Value oc`}</inlineCode></li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Set the default namespace:\n`}<inlineCode parentName=\"li\">{`k project <name_space>`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`For AKS:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Create an alias for the `}<inlineCode parentName=\"li\">{`kubectl`}</inlineCode>{` command:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Bash: `}<inlineCode parentName=\"li\">{`alias k='kubectl'`}</inlineCode></li>\n              <li parentName=\"ul\">{`Windows PowerShell: `}<inlineCode parentName=\"li\">{`Set-Alias -Name k -Value kubectl`}</inlineCode></li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Set the default namespace:\n`}<inlineCode parentName=\"li\">{`k config set-context --current --namespace=<name_space>`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`Specifying the XML server trace setting`}</h3>\n    <p>{`To enable XML server tracing you need to modify the out-of-the-box setting:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Copy the `}<inlineCode parentName=\"li\">{`xmlserver`}</inlineCode>{` podâ€™s `}<inlineCode parentName=\"li\">{`xmlserverconfig.xml.template`}</inlineCode>{` file to your local file system using the Kubernetes copy command.  For example:\n`}<inlineCode parentName=\"li\">{`k cp <xmlserver-pod-name>:xmlserverconfig.xml.template xmlserverconfig.xml.template -c xmlserver`}</inlineCode></li>\n      <li parentName=\"ul\">{`Edit the local `}<inlineCode parentName=\"li\">{`xmlserverconfig.xml.template`}</inlineCode>{` file to change the `}<inlineCode parentName=\"li\">{`TRACE_TRAFFIC`}</inlineCode>{` value as follows:\n`}<inlineCode parentName=\"li\">{`<TRACE_TRAFFIC>true</TRACE_TRAFFIC>`}</inlineCode></li>\n      <li parentName=\"ul\">{`Delete the existing `}<inlineCode parentName=\"li\">{`releasename-xmlserverconfig-template-cm`}</inlineCode>{` ConfigMap. For example:\n`}<inlineCode parentName=\"li\">{`k delete configmap releasename-xmlserverconfig-template-cm`}</inlineCode></li>\n      <li parentName=\"ul\">{`Create a new `}<inlineCode parentName=\"li\">{`releasename-xmlserverconfig-template-cm`}</inlineCode>{` ConfigMap using your edited copy of `}<inlineCode parentName=\"li\">{`xmlserverconfig.xml.template`}</inlineCode>{`; for example:\n`}<inlineCode parentName=\"li\">{`k create releasename-xmlserverconfig-template-cm --from-file=xmlserverconfig.xml.template`}</inlineCode>{`\nThe existing `}<inlineCode parentName=\"li\">{`releasename-xmlserverconfig-template-cm`}</inlineCode>{` ConfigMap in the `}<inlineCode parentName=\"li\">{`releasename-xmlserver`}</inlineCode>{` deployment will be replaced with your newly edited file.`}</li>\n      <li parentName=\"ul\">{`You must restart the xmlserver pod(s) for the new setting to be used. You can restart the pod(s) using the Kubernetes `}<inlineCode parentName=\"li\">{`delete pod`}</inlineCode>{` command.  For example:\n`}<inlineCode parentName=\"li\">{`k delete pod <xmlserver-pod-name>`}</inlineCode>{`\nThis will terminate the running pod and start a new pod that reflects the new ConfigMap.`}</li>\n    </ul>\n    <h3>{`Modifying the log4j properties`}</h3>\n    <p>{`The out-of-the-box `}<inlineCode parentName=\"p\">{`log4j2.properties`}</inlineCode>{` file will write the XML server trace output to stdout, which is routed to the podâ€™s `}<inlineCode parentName=\"p\">{`tmp/xmlserver.log`}</inlineCode>{` file.\nOptionally, you can provide your own custom log4j properties file.\nFor instance, it can be useful to modify the output layout to indicate the time-of-day and the worker thread processing the XML server job.\nFor example this log4j pattern:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`appender.A1.layout.pattern=[%p] %d{ABSOLUTE_MICROS} [%t] [%c{1}] %m%n\n`}</code></pre>\n    <p>{`will produce output in this format:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[xmlserver] [INFO] 14:01:46,165000 [ThreadPoolWorker-1] [XMLConnectionHandler] - Awaiting job configuration.\n`}</code></pre>\n    <p>{`as compared to the out-of-the-box format:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[xmlserver] [INFO] [XMLConnectionHandler] Awaiting job configuration.\n`}</code></pre>\n    <p>{`For more information on specifying log4j patterns see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://logging.apache.org/log4j/2.x/manual/layouts.html\"\n      }}>{`Layouts section`}</a>{` of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://logging.apache.org/log4j/2.x/manual/index.html\"\n      }}>{`log4j documentation`}</a>{`.`}</p>\n    <p>{`To modify the `}<inlineCode parentName=\"p\">{`log4j2.properties`}</inlineCode>{` file:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Copy the `}<inlineCode parentName=\"li\">{`xmlserver`}</inlineCode>{` podâ€™s `}<inlineCode parentName=\"li\">{`log4j2.properties`}</inlineCode>{` file to your local file system using the Kubernetes copy command.  For example:\n`}<inlineCode parentName=\"li\">{`k cp <xmlserver-pod-name>:/opt/ibm/Curam/xmlserver/log4j2.properties log4j2.properties -c xmlserver`}</inlineCode></li>\n      <li parentName=\"ul\">{`Edit the local file to specify the desired log4j configuration settings.`}</li>\n      <li parentName=\"ul\">{`Create a ConfigMap using your edited copy of `}<inlineCode parentName=\"li\">{`log4j2.properties`}</inlineCode>{`; for example:\n`}<inlineCode parentName=\"li\">{`k create configmap xmlserver-log4j-props-cm --from-file=log4j2.properties`}</inlineCode></li>\n      <li parentName=\"ul\">{`Edit the xmlserver deployment to specify the new ConfigMap:\n`}<inlineCode parentName=\"li\">{`k edit deployment releasename-xmlserver`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`In the subsequent edit session add the entries for the new ConfigMap, matching the name used when creating it; for example:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`...\n        volumeMounts:\n        ...\n        - mountPath: /opt/ibm/Curam/xmlserver/log4j2.properties\n          name: xmlserver-log4j-props-cm\n          subPath: log4j2.properties\n...\n      volumes:\n      ...\n      - configMap:\n          defaultMode: 420\n          name: xmlserver-log4j-props-cm\n        name: xmlserver-log4j-props-cm\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`You must restart the xmlserver pod(s) for it to reflect the new trace setting. You can restart the pod by using the Kubernetes `}<inlineCode parentName=\"li\">{`delete pod`}</inlineCode>{` command.  For example:\n`}<inlineCode parentName=\"li\">{`k delete pod <xmlserver-pod-name>`}</inlineCode>{`\nThis will terminate the running pod and start a new pod that reflects the new ConfigMap that contains the log4j properties.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineNotification","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}