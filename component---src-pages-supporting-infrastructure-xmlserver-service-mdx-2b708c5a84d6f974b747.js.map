{"version":3,"file":"component---src-pages-supporting-infrastructure-xmlserver-service-mdx-2b708c5a84d6f974b747.js","mappings":"sQAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,IAACR,EAASS,OAAAC,OAAA,GAAKX,EAAiBM,EAAK,CAAED,WAAYA,EAAYO,QAAQ,eAG5EH,EAAAA,EAAAA,IAAA,yBAAmBA,EAAAA,EAAAA,IAAA,KAAGI,WAAW,IAC7B,KAAQ,8DAA4D,2BACpC,kDACpCJ,EAAAA,EAAAA,IAAA,qMAEAA,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAMI,WAAW,MAClB,UAAa,kBAAgB,4BAGjCJ,EAAAA,EAAAA,IAAA,4DAAsDA,EAAAA,EAAAA,IAAA,cAAYI,WAAW,KAAG,yBAAuC,WAAWJ,EAAAA,EAAAA,IAAA,cAAYI,WAAW,KAAG,eAA6B,mCAG7L,CAEAV,EAAWW,gBAAiB,C","sources":["webpack://spm-kubernetes/./src/pages/supporting-infrastructure/xmlserver-service.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/spm-kubernetes/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`As shown in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/architecture/arch-overview/dev-workstation\"\n      }}>{`Deployment architecture`}</a>{` the SPM XML server is a separate deployment.`}</p>\n    <p>{`A Kubernetes service is used to abstract multiple replicas to a single XML server port.\nUse the following command to display the service and the port used by all the XML server pods:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get services\n`}</code></pre>\n    <p>{`The XML server service is listed with the name `}<inlineCode parentName=\"p\">{`releasename-xmlserver`}</inlineCode>{` where `}<inlineCode parentName=\"p\">{`releasename`}</inlineCode>{` was defined during deployment.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}