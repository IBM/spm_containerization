{"componentChunkName":"component---src-pages-architecture-arch-overview-dev-workstation-mdx","path":"/architecture/arch-overview/dev-workstation/","result":{"pageContext":{"frontmatter":{"title":"Dev Workstation","description":"Dev Workstation","tabs":["Architecture Overview","SPM AKS Reference Architecture","SPM OpenShift Reference Architecture","Dev Workstation","Static Content"]},"relativePagePath":"/architecture/arch-overview/dev-workstation.mdx","titleType":"page","MdxNode":{"id":"245620b7-cd08-5772-b8d8-608455579275","children":[],"parent":"294c14c3-d414-558f-be55-774a0735f6d5","internal":{"content":"---\ntitle: Dev Workstation\ndescription: Dev Workstation\ntabs: ['Architecture Overview','SPM AKS Reference Architecture','SPM OpenShift Reference Architecture','Dev Workstation','Static Content']\n---\n\nThis runbook is designed for first-time users of Helm, Minikube, and Kubernetes.\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop.\n\nThe procedure that is described uses a minimal architecture, where the intent is to get you familiar with using the main artifacts needed to run Merative Social Program Management (SPM)\n on Kubernetes. Figure 1 describes the example architecture:\n\n![Development Workstation Architecture](../../../images/dev_workstation_architecture.png)\n<Caption>\n\n*Figure 1:* Example dev workstation architecture\n\n</Caption>\n\nThe architecture is defined by a Kubernetes environment (contained in a virtual machine) that is composed of the following elements:\n\n* An IBM® WebSphere® Liberty based pod that contains the Cúram EAR file.\n* A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in SPM.\n* A pod that contains the XML server.\n* A pod that runs batch processes.\n\nThis environment is linked to an external IBM Db2 or Oracle database.\n\nFor a Kubernetes cluster in a development environment this runbook uses [Minikube](/prereq/kubernetes/minikube).\nMinikube can easily run on a developer computer, which is convenient for describing the application flow.\n[CodeReady Containers](/prereq/openshift/codeready-containers) (CRC) can also be used to run a Kubernetes environment in a development environment.\n\nFigure 2 describes the following development path.\n\n* Create a build and deployment environment for SPM.\n* Build SPM to deploy on Kubernetes on Minikube or CRC.\n* Create the Docker® images for SPM.\n* Deploy SPM Docker images to Kubernetes on Minikube or CRC.\n* Troubleshoot SPM when deployed in Kubernetes.\n\n![Process summary](../../../images/summary_process.png)\n<Caption>\n\n*Figure 2:* Process summary\n\n</Caption>\n\n<InlineNotification>\n\n**Note:** The implementation of SPM that is described in this runbook uses only the following .ear files:\n\n* Curam.ear\n* CuramServerCode.ear\n\nThe scripts can be easily extended to include the other SPM applications, such as Rest or Citizen Portal.\n\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n* Steps to build the SPM containers and run Minikube or CRC are done on a Red Hat or OSX development machine.\n* Steps related to [Building the Merative Cúram Social Program Management application](/deploy-spm/build-spm) can be executed on a separate machine.\n* Base knowledge of the Linux command line for navigating folders.\n","type":"Mdx","contentDigest":"1aaaa888fa40c9e4faaafb37dc2fd83f","owner":"gatsby-plugin-mdx","counter":203},"frontmatter":{"title":"Dev Workstation","description":"Dev Workstation","tabs":["Architecture Overview","SPM AKS Reference Architecture","SPM OpenShift Reference Architecture","Dev Workstation","Static Content"]},"exports":{},"rawBody":"---\ntitle: Dev Workstation\ndescription: Dev Workstation\ntabs: ['Architecture Overview','SPM AKS Reference Architecture','SPM OpenShift Reference Architecture','Dev Workstation','Static Content']\n---\n\nThis runbook is designed for first-time users of Helm, Minikube, and Kubernetes.\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop.\n\nThe procedure that is described uses a minimal architecture, where the intent is to get you familiar with using the main artifacts needed to run Merative Social Program Management (SPM)\n on Kubernetes. Figure 1 describes the example architecture:\n\n![Development Workstation Architecture](../../../images/dev_workstation_architecture.png)\n<Caption>\n\n*Figure 1:* Example dev workstation architecture\n\n</Caption>\n\nThe architecture is defined by a Kubernetes environment (contained in a virtual machine) that is composed of the following elements:\n\n* An IBM® WebSphere® Liberty based pod that contains the Cúram EAR file.\n* A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in SPM.\n* A pod that contains the XML server.\n* A pod that runs batch processes.\n\nThis environment is linked to an external IBM Db2 or Oracle database.\n\nFor a Kubernetes cluster in a development environment this runbook uses [Minikube](/prereq/kubernetes/minikube).\nMinikube can easily run on a developer computer, which is convenient for describing the application flow.\n[CodeReady Containers](/prereq/openshift/codeready-containers) (CRC) can also be used to run a Kubernetes environment in a development environment.\n\nFigure 2 describes the following development path.\n\n* Create a build and deployment environment for SPM.\n* Build SPM to deploy on Kubernetes on Minikube or CRC.\n* Create the Docker® images for SPM.\n* Deploy SPM Docker images to Kubernetes on Minikube or CRC.\n* Troubleshoot SPM when deployed in Kubernetes.\n\n![Process summary](../../../images/summary_process.png)\n<Caption>\n\n*Figure 2:* Process summary\n\n</Caption>\n\n<InlineNotification>\n\n**Note:** The implementation of SPM that is described in this runbook uses only the following .ear files:\n\n* Curam.ear\n* CuramServerCode.ear\n\nThe scripts can be easily extended to include the other SPM applications, such as Rest or Citizen Portal.\n\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n* Steps to build the SPM containers and run Minikube or CRC are done on a Red Hat or OSX development machine.\n* Steps related to [Building the Merative Cúram Social Program Management application](/deploy-spm/build-spm) can be executed on a separate machine.\n* Base knowledge of the Linux command line for navigating folders.\n","fileAbsolutePath":"/home/runner/work/spm-kubernetes/spm-kubernetes/src/pages/architecture/arch-overview/dev-workstation.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","56986546","768070550"]}